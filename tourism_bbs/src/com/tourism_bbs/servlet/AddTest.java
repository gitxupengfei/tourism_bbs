package com.tourism_bbs.servlet;

import java.io.IOException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.swing.JOptionPane;

import com.tourism_bbs.bean.UserBean;

import javafx.scene.control.Alert;


import java.io.File;  
import java.io.*;  
import java.io.IOException;  
import java.io.PrintWriter;  
import java.util.List;
import org.apache.commons.fileupload.FileItem;  
import org.apache.commons.fileupload.FileUploadException;  
import org.apache.commons.fileupload.disk.DiskFileItemFactory;  
import org.apache.commons.fileupload.servlet.ServletFileUpload;  
/**
 * Servlet implementation class AddUserServlet
 */

public class AddTest extends HttpServlet {
	private static final long serialVersionUID = 1L;
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	//从request获取各属性的值
		//String userId=request.getParameter("userId");
		request.setCharacterEncoding("utf-8");
		
		//获得磁盘文件条目工厂  
        DiskFileItemFactory factory = new DiskFileItemFactory();  
        //获取文件需要上传到的路径  
        String path = request.getRealPath("/userphoto");  
          
        //如果没以下两行设置的话，上传大的 文件 会占用 很多内存，  
        //设置暂时存放的 存储室 , 这个存储室，可以和 最终存储文件 的目录不同  
        /** 
         * 原理 它是先存到 暂时存储室，然后在真正写到 对应目录的硬盘上，  
         * 按理来说 当上传一个文件时，其实是上传了两份，第一个是以 .tem 格式的  
         * 然后再将其真正写到 对应目录的硬盘上 
         */  
        factory.setRepository(new File(path));  
        //设置 缓存的大小，当上传文件的容量超过该缓存时，直接放到 暂时存储室  
        factory.setSizeThreshold(1024*1024) ;  
          
        //高水平的API文件上传处理  
        ServletFileUpload upload = new ServletFileUpload(factory);  
          
          
        try {  
            //可以上传多个文件  
            List<FileItem> list = (List<FileItem>)upload.parseRequest(request);  
          
            for(FileItem item : list)  
            {  
                //获取表单的属性名字  
                String name = item.getFieldName();  
                  
                //如果获取的 表单信息是普通的 文本 信息  
                if(item.isFormField())  
                {                     
                    //获取用户具体输入的字符串 ，名字起得挺好，因为表单提交过来的是 字符串类型的  
                    String value = item.getString() ;  
                      
                    request.setAttribute(name, value);  
                }  
                //对传入的非 简单的字符串进行处理 ，比如说二进制的 图片，电影这些  
                else  
                {  
                    /** 
                     * 以下三步，主要获取 上传文件的名字 
                     */  
                    //获取路径名  
                    String value = item.getName() ;  
                    //索引到最后一个反斜杠  
                    int start = value.lastIndexOf("\\");  
                    //截取 上传文件的 字符串名字，加1是 去掉反斜杠，  
                    String filename = value.substring(start+1);  
                   
                    request.setAttribute("photo", filename);  
                      
                    //真正写到磁盘上  
                    //它抛出的异常 用exception 捕捉  
                      
                    //item.write( new File(path,filename) );//第三方提供的  
                      
                    //手动写的  
                    OutputStream out = new FileOutputStream(new File(path,filename));  
                      
                    InputStream in = item.getInputStream() ;  
                      
                    int length = 0 ;  
                    byte [] buf = new byte[1024] ;  
                      
                    System.out.println("获取上传文件的总共的容量："+item.getSize());  
  
                    // in.read(buf) 每次读到的数据存放在   buf 数组中  
                    while( (length = in.read(buf) ) != -1)  
                    {  
                        //在   buf 数组中 取出数据 写到 （输出流）磁盘上  
                        out.write(buf, 0, length);  
                          
                    }  
                      
                    in.close();  
                    out.close();  
                }  
            }  
              
              
              
        } catch (FileUploadException e) {  
            // TODO Auto-generated catch block  
            e.printStackTrace();  
        }  
        catch (Exception e) {  
            // TODO Auto-generated catch block  
              
            //e.printStackTrace();  
        }  
          
        request.setCharacterEncoding("utf-8");  
        String userName=(String) request.getAttribute("register_username");
		String password=(String) request.getAttribute("register_password");
		String question1=(String) request.getAttribute("question1");
		String answer1=(String) request.getAttribute("answer1");
		String question2=(String) request.getAttribute("question2");
		String answer2=(String) request.getAttribute("answer2");
		String  sex=(String) request.getAttribute("sex");
		String age=(String) request.getAttribute("age");
		String hometown=(String) request.getAttribute("hometown");
		String school=(String) request.getAttribute("school");
		String telephone=(String) request.getAttribute("phone");
		String QQ=(String) request.getAttribute("QQ");
		String introduce=(String) request.getAttribute("introduce");
		String photoPath=(String) request.getAttribute("photo");
		
		UserBean userBean=new UserBean();
		//属性赋值
		
		userBean.setUserName(userName);
		userBean.setPasswrd(password);
		userBean.setQuestion1(question1);
		userBean.setAnswer1(answer1);
		userBean.setQuestion2(question2);
		userBean.setAnswer2(answer2);
		userBean.setAge(age);
		userBean.setSex(sex);
		userBean.setHometown(hometown);
		userBean.setSchool(school);
		userBean.setTelephone(telephone);
		userBean.setQQ(QQ);
		userBean.setIntroduce(introduce);
		userBean.setPhotoPath(photoPath);
		//跳转的页面
		String forward = null;
		//页面的提示信息
		String info = null;
		
		try {
			
				userBean.addUser();
				forward="registerSucess.jsp";
				
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			info="系统异常，注册失败！";
			forward="register.jsp";
			
		}
		
		request.setAttribute("info", info);
		RequestDispatcher rd=request.getRequestDispatcher(forward);
		rd.forward(request, response);
	} 
          
  
     
  
  

		
		
		
		
		
		
		
		
		
		/*String userName=request.getParameter("register_username");
		String password=request.getParameter("register_password");
		String question1=request.getParameter("question1");
		String answer1=request.getParameter("answer1");
		String question2=request.getParameter("question2");
		String answer2=request.getParameter("answer2");
		String  sex=request.getParameter("sex");
		String age=request.getParameter("age");
		String hometown=request.getParameter("hometown");
		String school=request.getParameter("school");
		String telephone=request.getParameter("phone");
		String QQ=request.getParameter("QQ");
		String introduce=request.getParameter("introduce");
		String photoPath=request.getParameter("photoPath");
		String files=request.getParameter("photoUpload");
		System.out.println("文件"+files);
		UserBean userBean=new UserBean();
		//属性赋值
		System.out.println(userName);
		userBean.setUserName(userName);
		userBean.setPasswrd(password);
		userBean.setQuestion1(question1);
		userBean.setAnswer1(answer1);
		userBean.setQuestion2(question2);
		userBean.setAnswer2(answer2);
		userBean.setAge(age);
		userBean.setSex(sex);
		userBean.setHometown(hometown);
		userBean.setSchool(school);
		userBean.setTelephone(telephone);
		userBean.setQQ(QQ);
		userBean.setIntroduce(introduce);
		userBean.setPhotoPath(photoPath);
		System.out.println("图片："+photoPath);
		//跳转的页面
		String forward = null;
		//页面的提示信息
		String info = null;
		
		try {
			
				userBean.addUser();
				forward="registerSucess.jsp";
				
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			info="系统异常，注册失败！";
			forward="register.jsp";
			
		}
		
		request.setAttribute("info", info);
		RequestDispatcher rd=request.getRequestDispatcher(forward);
		rd.forward(request, response);
	}
*/
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		
		doGet(request, response);
	}

}
